version: "3.9"
services:
  mysql:
    image: mysql:8.4
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-campuswell}
      MYSQL_USER: ${MYSQL_USER:-campus}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-campus}
    command: --bind-address=0.0.0.0 --port=3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s
    ports: ["3307:3307"]
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sports-svc/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-campuswell}
      POSTGRES_USER: ${POSTGRES_USER:-campus}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-campus}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U campus -d campuswell"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  sports-svc:
    build: ./sports-svc
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=${MYSQL_DATABASE:-campuswell}
      - MYSQL_USER=${MYSQL_USER:-campus}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-campus}
    depends_on:
      mysql:
        condition: service_healthy
    ports: ["8082:8082"]
    restart: unless-stopped

  psych-svc:
    build: ./psych-svc
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-campuswell}
      - POSTGRES_USER=${POSTGRES_USER:-campus}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-campus}
      - SEED_PSYCH=true
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8081:8081"]
    restart: unless-stopped

  habits-svc:
    build: ./habits-svc
    environment:
      - MONGODB_URI=mongodb://mongo:27017/${MYSQL_DATABASE:-campuswell}
    depends_on:
      - mongo
    ports: ["8083:8083"]
    restart: unless-stopped

  aggregator-svc:
    build: ./aggregator-svc
    environment:
      - PSYCH_BASE=${PSYCH_BASE:-http://psych-svc:8081}
      - SPORTS_BASE=${SPORTS_BASE:-http://sports-svc:8082}
      - HABITS_BASE=${HABITS_BASE:-http://habits-svc:8083}
      - JWT_SECRET=${JWT_SECRET:-devsecret}
    ports: ["8080:8080"]
    restart: unless-stopped

  analytics-svc:
    build: ./analytics-svc
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - ATHENA_DB=${ATHENA_DB:-campuswell_analytics}
      - ATHENA_OUTPUT=${ATHENA_OUTPUT:-s3://your-bucket/athena-results/}
    ports: ["8084:8084"]
    restart: unless-stopped

  # Ejecuta el seeding de eventos automáticamente y termina
  sports-seed:
    profiles: ["seed"]
    build: ./sports-svc
    depends_on:
      mysql:
        condition: service_healthy
    command: ["python", "seed.py"]
    restart: "no"

  # Opcional: ejecuta el seeding de registros después de cargar eventos
  sports-seed-registrations:
    profiles: ["seed"]
    build: ./sports-svc
    depends_on:
      mysql:
        condition: service_healthy
      sports-seed:
        condition: service_completed_successfully
    command: ["python", "seed_registrations.py"]
    restart: "no"

  frontend:
    profiles: ["ui"]
    build: ./frontend
    ports: ["3000:80"]
    depends_on:
      - aggregator-svc
    environment:
      - REACT_APP_AGGREGATOR_URL=http://aggregator-svc:8080
      - REACT_APP_PSYCH_URL=http://psych-svc:8081
      - REACT_APP_SPORTS_URL=http://sports-svc:8082
      - REACT_APP_HABITS_URL=http://habits-svc:8083
      - REACT_APP_ANALYTICS_URL=http://analytics-svc:8084
    restart: unless-stopped

volumes:
  mysql_data:
  mongo_data:
  postgres_data: